{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","setMovie","inputAlert","setInputAlert","inputValue","setInputValue","htmlFor","type","id","placeholder","value","onChange","e","target","disabled","onClick","query","preventDefault","fetch","then","res","json","catch","Response","Error","poster","Poster","Title","Plot","imdbID","prev","App","ReactDOM","render","document","getElementById"],"mappings":"sTAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,aCJZ,IAAMC,EAA6B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC3C,EAA0BC,mBAAuB,MAAjD,mBAAOf,EAAP,KAAcgB,EAAd,KACA,EAAoCD,oBAAS,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAAoCH,mBAAS,IAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAsCA,OACE,qCACE,uBAAMnB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQoB,QAAQ,cAAjC,yBAIA,qBAAKpB,UAAU,UAAf,SACE,uBACE,UAAQ,aACRqB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZvB,UAAS,gBAAWgB,GAAc,aAClCQ,MAAON,EACPO,SA/BU,SAACC,GACrBP,EAAcO,EAAEC,OAAOH,OAClBE,EAAEC,OAAOH,OACZP,GAAc,QAgCV,mBAAGjB,UAAU,iBAAiB,UAAQ,eAAtC,SACGgB,GAAU,gBAAaE,EAAb,wCAIf,sBAAKlB,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRqB,KAAK,SACLrB,UAAU,kBACV4B,UAAWV,EACXW,QApEQ,SAACH,GCVhB,IAAkBI,EDWrBJ,EAAEK,kBCXmBD,EDYZZ,ECXJc,MAAM,GAAD,OAHE,2CAGF,cAAiBF,IAC1BG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,wBDOYL,MAAK,SAAAC,GACxB,GAAI,UAAWA,EAAK,CAClB,IAAMK,EAAwB,QAAfL,EAAIM,OACf,4DACAN,EAAIM,OAERzB,EAAS,CACPX,MAAO8B,EAAIO,MACXpC,YAAa6B,EAAIQ,KACjBxC,OAAQqC,EACRhC,QAAS,wBACTI,OAAQuB,EAAIS,cAGd1B,GAAc,OA+CV,4BAWF,qBAAKjB,UAAU,UAAf,SACE,wBACE,UAAQ,YACRqB,KAAK,SACLrB,UAAU,oBACV4B,UAAW7B,EACX8B,QApDM,WACZ9B,IACFc,GAAU,SAAA+B,GAAI,4BAAQA,GAAR,CAAc7C,OAC5BgB,EAAS,MACTI,EAAc,MA2CR,qCAaN,sBAAKnB,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACCD,GAEC,cAAC,EAAD,CACEA,MAAOA,WEtGN8C,EAAM,WACjB,MAA4B/B,mBAAkB,IAA9C,mBAAOL,EAAP,KAAeI,EAAf,KAEA,OACE,sBAAKb,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CACEa,UAAWA,UCbrBiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d1585a1e.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [inputAlert, setInputAlert] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n\n  const requestFilm = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    getMovie(inputValue).then(res => {\n      if ('Title' in res) {\n        const poster = res.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : res.Poster;\n\n        setMovie({\n          title: res.Title,\n          description: res.Plot,\n          imgUrl: poster,\n          imdbUrl: 'images/imdb-logo.jpeg',\n          imdbId: res.imdbID,\n        });\n      } else {\n        setInputAlert(true);\n      }\n    });\n  };\n\n  const searchHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n    if (!e.target.value) {\n      setInputAlert(false);\n    }\n  };\n\n  const addButton = () => {\n    if (movie) {\n      setMovies(prev => [...prev, movie]);\n      setMovie(null);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${inputAlert && 'is-danger'}`}\n              value={inputValue}\n              onChange={searchHandler}\n            />\n          </div>\n\n          <p className=\"help is-danger\" data-cy=\"errorMessage\">\n            {inputAlert && `Can't ${inputValue} find a movie with such a title`}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className=\"button is-light\"\n              disabled={!inputValue}\n              onClick={requestFilm}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"addButton\"\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={addButton}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        <h2 className=\"title\">Preview</h2>\n        {movie\n        && (\n          <MovieCard\n            movie={movie}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=ac36f068';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}